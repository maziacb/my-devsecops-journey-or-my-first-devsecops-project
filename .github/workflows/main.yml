name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch

env:
  DOCKER_IMAGE_NAME: flask-devsecops-app # Name of your Docker image
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # GitHub Secret for Docker Hub username

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest # Run on a fresh Ubuntu virtual machine

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to checkout your repository code

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Use the GitHub Secret for password

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      # --- Optional: Basic Security Scan (Hadolint for Dockerfile best practices) ---
      - name: Install Hadolint
        run: |
          sudo wget -O /bin/hadolint "https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64"
          sudo chmod +x /bin/hadolint

      - name: Run Hadolint Scan
        run: hadolint Dockerfile
        continue-on-error: true

  # --- Trivy Vulnerability Scan ---
      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
